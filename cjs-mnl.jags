
    model {
    #-- effets sur les parametres
    for (t in 1:(n.occasions-1)){
    for (m in 1:nbmarrays){
      logit(phi[m,t]) <-  mu.phi+slopeLsex[vecsex[m]]*beta_phi_sex
      logit(p[m,t]) <- mu.p +slopeLsex[vecsex[m]]*beta_p_sex + eta[vecsite[m]] #c'est tordu vecsite[m] ici = s plus bas
    } 
    }
    # Priors and constraints
    
    mean.phi ~ dunif(0, 1)             
    mu.phi <- log(mean.phi / (1-mean.phi)) 
    mean.p ~ dunif(0, 1)             
    mu.p <- log(mean.p / (1-mean.p)) 
        
    beta_phi_sex~dnorm(0,0.01)
    beta_p_sex~dnorm(0,0.01)
    
    for (s in 1:nsites){
    eta[s] ~ dnorm(0,tau.p) # effet aleatoire site sur detection
    }#c'est tordu s ici = vecsite[m] plus haut
    sigma.p ~ dunif(0, 5)                
    tau.p <- pow(sigma.p, -2)
    sigma2.p <- pow(sigma.p, 2)
    

    # Define the multinomial likelihood
    for (m in 1:nbmarrays){ # boucle sur site*sexe
    for (t in 1:(n.occasions-1)){
    marr[t,1:n.occasions,m] ~ dmulti(pr[m,t, ], rel[t,m])
    }
    # Define the cell probabilities of the m-array
    # Main diagonal
    for (t in 1:(n.occasions-1)){
    q[m,t] <- 1-p[m,t]                # Probability of non-recapture
    pr[m,t,t] <- phi[m,t]*p[m,t]
    # Above main diagonal
    for (j in (t+1):(n.occasions-1)){
    pr[m,t,j] <- prod(phi[m,t:j])*prod(q[m,t:(j-1)])*p[m,j]
    } #j
    # Below main diagonal
    for (j in 1:(t-1)){
    pr[m,t,j] <- 0
    } #j
    } #t
    # Last column: probability of non-recapture
    for (t in 1:(n.occasions-1)){
    pr[m,t,n.occasions] <- 1-sum(pr[m,t,1:(n.occasions-1)])
    } #t
    } #m
    }
    
